import type { Locale } from '../../runtime/src/core.mjs';
export declare type Adapters = 'angular' | 'node' | 'react' | 'solid' | 'svelte' | 'vue';
export declare type OutputFormats = 'TypeScript' | 'JavaScript';
declare type NoAdaptersConfig = {
    adapter?: never;
    adapters?: never;
};
declare type SingleAdapterConfig = {
    adapter: Adapters;
    adapters?: never;
};
declare type MultipleAdaptersConfig = {
    adapter?: never;
    adapters: Adapters[];
};
declare type AdapterConfig = NoAdaptersConfig | SingleAdapterConfig | MultipleAdaptersConfig;
export declare type GeneratorConfig = {
    $schema?: string;
    baseLocale?: Locale;
    tempPath?: string;
    outputPath?: string;
    outputFormat?: OutputFormats;
    typesFileName?: string;
    utilFileName?: string;
    formattersTemplateFileName?: string;
    typesTemplateFileName?: string;
    esmImports?: boolean;
    adapterFileName?: string;
    generateOnlyTypes?: boolean;
    banner?: string;
    runAfterGenerator?: string | undefined;
} & AdapterConfig;
export declare type GeneratorConfigWithDefaultValues = GeneratorConfig & {
    baseLocale: Locale;
    tempPath: string;
    outputPath: string;
    outputFormat: OutputFormats;
    typesFileName: string;
    utilFileName: string;
    formattersTemplateFileName: string;
    typesTemplateFileName: string;
    esmImports: boolean;
    generateOnlyTypes: boolean;
    banner: string;
    runAfterGenerator: string | undefined;
};
export {};
